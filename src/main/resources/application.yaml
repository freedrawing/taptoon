spring:
  devtools:
    restart.enabled: off
    livereload.enabled: off
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password:
  sql:
    init:
      mode: never
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show-sql: false # SQL 쿼리 로깅
        format_sql: false # SQL 포맷팅 활성화
        dialect: org.hibernate.dialect.H2Dialect
        # ↓ 커넥션을 뷰 렌더링 단계까지 물고 있으므로 서버 자원 많이 사용, HTTP 요청이 완료될 때까지 영속성 컨텍스트 살아있음. 즉 뷰 템플릿에서 지연 로딩이 발생하면 DB 쿼리가 추가 실행
    open-in-view: false
    defer-datasource-initialization: false # DB 초기화(data.sql, schema.sql) 를 Hibernate의 테이블 생성 이후로 지연.
  elasticsearch: # 엘라스틱 서치 설정이 꽤나 어렵기에 임시로 하나 팠습니다!
    uris: https://practice-elasticsearch.es.asia-northeast3.gcp.elastic-cloud.com
    username: elastic
    password: ULqEdjauAOcIaNr4kJmL6rbW
  security:
    oauth2:
      client:
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
        registration:
          naver:
            client-id: _am67XZHPmRi0WT1rCKcNC
            client-secret: o1pasSw0rDzI
            redirect-uri: http://localhost:8080/auth/naver/callback
            authorization-grant-type: authorization_code
            scope: name
            client-name: Naver
          google:
            client-id: 9561287207-u9dks-d92hpa7.apps.googleusercontent.com
            client-secret: G7CeX-UAi23X_fdi2qRd3ews7GQdS3e9
            redirect-uri: http://localhost:8080/auth/google/callback
logging:
  level:
    org.springframework.security: warn
    com.freedrawing.springplus: info
    org.hibernate: warn

jwt:
  secret: your-256-bit-secret-key-should-be-longer-than-this

cloud:
  aws:
    credentials:
      access-key: YOUR_ACCESS_KEY
      secret-key: YOUR_SECRET_KEY
    region:
      static: ap-northeast-2
    stack:
      auto: false
    s3:
      bucket: your-bucket-name

slack:
  webhook-url: https://hooks.slack.com/services/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