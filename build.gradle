plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring basic
	implementation 'org.springframework.boot:spring-boot-starter-web' // Spring Web 애플리케이션 개발에 필요한 기본 의존성 포함.
	implementation 'org.springframework.boot:spring-boot-starter-validation' // javax.validation을 통해 데이터 유효성 검사를 지원.
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 개발 중 핫 리로드 및 기타 편의 기능 제공.
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Security
//	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta' // Querydsl의 JPA 관련 기능 제공 (JPAQueryFactory, BooleanBuilder, PathBuilder ...)
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta' // QueryDSL APT(Annotation Processing Tool)로 컴파일 시점에 @Entity 애노테이션이 붙은 JPA 엔티티 클래스를 기반으로 Q 클래스를 생성
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api' // QueryDSL APT에서 사용하는 @Generated 애노테이션을 제공.  클래스 생성 시 @Generated 애노테이션이 필요하며, 이를 처리하기 위해 이 의존성이 필요
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api' // JPA 표준 애노테이션(@Entity, @Id, @Column 등)을 정의. QueryDSL APT가 엔티티 클래스를 분석하고 Q 클래스를 생성하는 데 필수

	// h2
	runtimeOnly 'com.h2database:h2'

	// DB
	runtimeOnly 'com.mysql:mysql-connector-j'

	// docker
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	// P6Spy
	implementation 'p6spy:p6spy:3.9.1'
	implementation 'com.github.gavlyukovskiy:datasource-decorator-spring-boot-autoconfigure:1.9.2'

	// JWT
	implementation 'io.jsonwebtoken:jjwt:0.9.1' // Java JWT library
	implementation 'javax.xml.bind:jaxb-api:2.3.1' // XML document와 Java 객체 간 매핑 자동화

}

tasks.named('test') {
	useJUnitPlatform()
}
